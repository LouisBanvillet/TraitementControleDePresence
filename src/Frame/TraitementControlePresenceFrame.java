package Frame;

import Main.TraitementControlePresence;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;


// convertir une cellule de JTable en un JTextField afin de pouvoir exploiter ses propriétés 
// afficher les données en sortie sous forme de Liste (ComboBox au lieu de label?)
// gérer les cas: matières, autocomplétion si nom d'élève rentré, professeur


/**
 *
 * @author Louis, Kevin
 */

public class TraitementControlePresenceFrame extends javax.swing.JFrame {
    
    JFrame frame = new JFrame("Resultats");
           
    CardLayout cl = new CardLayout();
    JPanel content = new JPanel();
    String [] list = {"VIDE","ELEVE","MATIERE","ELEVEMATIERE","PROFESSEUR"};
    
    public JPanel jPanelVide = new JPanel();
    public JPanel jPanelEleve = new JPanel();
    public JPanel jPanelMatiere = new JPanel();
    public JPanel jPanelEleveMatiere = new JPanel();
    public JPanel jPanelProfesseur = new JPanel();
    public JPanel boutonPane = new JPanel();
    
    public JLabel labelMatiere = new JLabel("Matière : ");
    public JLabel labelNom = new JLabel("Nom : ");
    public JLabel labelPrenom = new JLabel("Prénom : ");
    
    public JTextField textMatiere = new JTextField("");
    public JTextField textNom = new JTextField("");
    public JTextField textPrenom = new JTextField("");
    public JTextField resultats = new JTextField("");    
   
    public JPanel jPanel1;
    public JLabel titre2;
    public JComboBox choixAction;
    public JComboBox listeNoms = new JComboBox();
    public JComboBox listeMatieres = new JComboBox();
    public JLabel titre1;
    public JPanel jPanel2;
    public JLabel textRequest;  
    public JButton creationBouton = new JButton("Générer l'exportation !");
    public JPanel jPanel4;
    
    /**
     * Initialisation des composants de la fenêtre 
     */
    public TraitementControlePresenceFrame() {       
        
        initComponents();              
        initPanels();
        initFrame();
        this.setLocationRelativeTo(null);
        choixAction.addActionListener(new ItemAction());
        creationBouton.addActionListener(new BoutonListener());
    }    
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        titre2 = new javax.swing.JLabel();
        titre1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        textRequest = new javax.swing.JLabel();
        choixAction = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Traitement des données - Contrôle de présence");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(null);
        setPreferredSize(new java.awt.Dimension(500, 400));
        setResizable(false);
        getContentPane().setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 2));

        jPanel1.setMinimumSize(new java.awt.Dimension(500, 80));
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 80));

        titre2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titre2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titre2.setText("Contrôle de présence");
        titre2.setMaximumSize(null);
        titre2.setMinimumSize(null);
        titre2.setPreferredSize(new java.awt.Dimension(500, 40));
        jPanel1.add(titre2);

        titre1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titre1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titre1.setText("Traitement des données");
        titre1.setMaximumSize(new java.awt.Dimension(200, 50));
        titre1.setMinimumSize(null);
        titre1.setName(""); // NOI18N
        titre1.setPreferredSize(new java.awt.Dimension(500, 25));
        jPanel1.add(titre1);

        getContentPane().add(jPanel1);

        jPanel2.setMaximumSize(null);
        jPanel2.setMinimumSize(new java.awt.Dimension(500, 90));
        jPanel2.setPreferredSize(new java.awt.Dimension(500, 90));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 10));

        textRequest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textRequest.setText("Quel objet est concerné par votre requête?");
        textRequest.setMaximumSize(null);
        textRequest.setMinimumSize(null);
        textRequest.setPreferredSize(new java.awt.Dimension(500, 30));
        jPanel2.add(textRequest);

        choixAction.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Un élève", "Une matière", "Un élève dans une matière", "Un professeur" }));
        choixAction.setMaximumSize(null);
        choixAction.setMinimumSize(null);
        choixAction.setPreferredSize(new java.awt.Dimension(200, 20));
        choixAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choixActionActionPerformed(evt);
            }
        });
        jPanel2.add(choixAction);

        getContentPane().add(jPanel2);
        getContentPane().add(jPanel4);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void initPanels(){
        
        jPanelVide.setMinimumSize(new java.awt.Dimension(500, 170));                    
        jPanelVide.setPreferredSize(new java.awt.Dimension(500, 170));
        jPanelVide.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());   
        
        jPanelEleve.setMinimumSize(new java.awt.Dimension(500, 170));                    
        jPanelEleve.setPreferredSize(new java.awt.Dimension(500, 170));
        jPanelEleve.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());        
        jPanelEleve.add(labelNom, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, -1));                      
        jPanelEleve.add(textNom, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 220, 30));
        jPanelEleve.add(labelPrenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, -1, -1));                      
        jPanelEleve.add(textPrenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 220, 30));
        jPanelEleve.add(creationBouton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 220, 30));
        
        jPanelMatiere.setMinimumSize(new java.awt.Dimension(500, 170));                   
        jPanelMatiere.setPreferredSize(new java.awt.Dimension(500, 170));
        jPanelMatiere.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());        
        jPanelMatiere.add(labelMatiere, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, -1));                      
        jPanelMatiere.add(textMatiere, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 220, 30));
        jPanelMatiere.add(creationBouton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 220, 30));
         
        jPanelEleveMatiere.setMinimumSize(new java.awt.Dimension(500, 170));                   
        jPanelEleveMatiere.setPreferredSize(new java.awt.Dimension(500, 170));
        jPanelEleveMatiere.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());        
        jPanelEleveMatiere.add(labelNom, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, -1));                      
        jPanelEleveMatiere.add(textNom, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 220, 30));
        jPanelEleveMatiere.add(labelPrenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, -1, -1));                      
        jPanelEleveMatiere.add(textPrenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 220, 30));
        jPanelEleveMatiere.add(labelMatiere, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, -1, -1));                      
        jPanelEleveMatiere.add(textMatiere, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 220, 30));
        jPanelEleveMatiere.add(creationBouton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 220, 30));
         
        jPanelProfesseur.setMinimumSize(new java.awt.Dimension(500, 170));                    
        jPanelProfesseur.setPreferredSize(new java.awt.Dimension(500, 170));
        jPanelProfesseur.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());        
        jPanelProfesseur.add(labelNom, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, -1));                      
        jPanelProfesseur.add(textNom, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 220, 30));
        jPanelProfesseur.add(labelPrenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, -1, -1));                      
        jPanelProfesseur.add(textPrenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 220, 30));
        jPanelProfesseur.add(creationBouton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 220, 30));
        
              
        content.setLayout(cl);
        content.add(jPanelVide,list[0]);
        content.add(jPanelEleve,list[1]);
        content.add(jPanelMatiere,list[2]);
        content.add(jPanelEleveMatiere,list[3]);
        content.add(jPanelProfesseur,list[4]);
        this.getContentPane().add(content);
        cl.show(content, list[0]);
        this.setVisible(true);
        
        textNom.getDocument().addDocumentListener(new SearchL());
        textPrenom.getDocument().addDocumentListener(new SearchL());
        textMatiere.getDocument().addDocumentListener(new SearchL());
        
    }
    
    private void initFrame(){
        
        frame.setVisible(false);
        frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);        
        JButton close = new JButton("Fermer");
        close.addActionListener(new CloseListener());
        frame.add(close,BorderLayout.SOUTH);
        frame.setSize(300, 200);
        frame.setLocation(new Point(100,100));
        
    }
    private void choixActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choixActionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_choixActionActionPerformed

    class CloseListener implements ActionListener {

       
        public void actionPerformed(ActionEvent ae) {
            frame.setVisible(false);
            textNom.setText(listeNoms.getSelectedItem().toString());
        }

       
    }

    /**
     * Les champs de la JTable sont initialisés selon l'item selectionné de la liste déroulante
     * @param args the command line arguments
     */
    class ItemAction implements ActionListener {
        

        public void actionPerformed(ActionEvent e) {           

            switch (choixAction.getSelectedIndex()) {
                case 1:         
                    
                    cl.show(content,list[1]);                                   
                    
                    ;
                    break;
                case 2: 
                         
                    cl.show(content, list[2]);                  
                    ;
                    
                    break;
                case 3:
                    
                    cl.show(content, list[3]); 
                    ;
                    break;
                case 4:
                     cl.last(content); 
                    ;
                    break;
                default:
                    ;
            }
          
        }
    }         
        
    /**
     * 
     * Récupération des valeurs entrées par l'utilisateur lors de la validation du choix 
     * Elles sont traitées dans TraitementControlePresence.java puis analysées
     * 
     */
    class BoutonListener implements ActionListener {
        //Redéfinition de la méthode actionPerformed()

        @Override
         public void actionPerformed(ActionEvent arg0) {
               
              
            switch (choixAction.getSelectedIndex()) {
                case 1:
                    TraitementControlePresence.creationFormulaireAbsenceEtudiant(
                            textNom.getText(),
                            textPrenom.getText());
                    break;
                case 2:
                    TraitementControlePresence.creationFormulaireAbsenceMatiere(
                            textMatiere.getText());
                    break;
                case 3:
                    TraitementControlePresence.creationFormulaireAbsenceEtudiantPourUneMatière(
                            textNom.getText(), 
                            textPrenom.getText(), 
                            textMatiere.getText());
                    break;
                case 4 : 
                    TraitementControlePresence.creationFormulaireAbsenceEtudiant(
                            textNom.getText(),
                            textPrenom.getText());
                 break; 
                default:
                    ;
            }
        }
    }
    
    class SearchL implements DocumentListener {

        @Override
        public void insertUpdate(DocumentEvent de) {
             textValueChanged();
        }

        @Override
        public void removeUpdate(DocumentEvent de) {
           textValueChanged();
        }

        @Override
        public void changedUpdate(DocumentEvent de) {
          
        }
        
    }
    // a etudier : affichage 
    public void textValueChanged(){
       
        switch (choixAction.getSelectedIndex()) { // eleve
                case 1:        
                    // si on est dans le cas d'un élève, à partir du nom, il faudrait pouvoir 
                    // avoir automatiquement le prénom ou la liste                    
                    listeNoms = TraitementControlePresence.listeNoms(textNom);
                    
                    if(listeNoms.getItemCount()!=0){
                        afficher(listeNoms);
                    }
                    // on obtient la liste des noms
                break;
                case 2: // matiere
                     // pas de souci pour la matiere -> un seul champ      
                     listeMatieres = TraitementControlePresence.listeMatieres(textMatiere);
                     if(listeMatieres.getItemCount()!=0){
                        afficher(listeMatieres);
                    }
                    // on obtient la liste des matieres suivant ce qu'a rentre l'user
                break;   
                case 3: // eleve matiere
                          
                     listeNoms = TraitementControlePresence.listeNoms(textNom);                    
                break;            
                case 4: // prof
                    listeNoms = TraitementControlePresence.listeNoms(textNom); 
                    if(listeNoms.getItemCount()!=0){
                        afficher(listeNoms);
                    }
                                        
                break; 
                default:;
                break;      
       }
    }    
    
    public void afficher(JComboBox combo){     
        frame.add(combo, BorderLayout.NORTH);       
        frame.setVisible(true);
    }
    /**
     * Message d'avertissement si matière/élève non repertorié
     * @param message
     * @param titre
     */
    public static void avertissement(String message, String titre) {

        JOptionPane.showMessageDialog(null, message, titre, JOptionPane.WARNING_MESSAGE);

    }
    
    /**
     * Message d'information lors de la génération du document Excel
     * @param message
     * @param titre
     */
   public static void notification(String message, String titre){
        
        JOptionPane.showMessageDialog(null, message, titre, JOptionPane.INFORMATION_MESSAGE);
    }
}
/*
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox choixAction;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel textRequest;
    private javax.swing.JLabel titre1;
    private javax.swing.JLabel titre2;
    // End of variables declaration//GEN-END:variables
}*/

