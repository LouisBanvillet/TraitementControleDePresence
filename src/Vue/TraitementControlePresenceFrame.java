package Vue;

import Modele.Requetes;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

// convertir une cellule de JTable en un JTextField afin de pouvoir exploiter ses propriétés 
// afficher les données en sortie sous forme de Liste (ComboBox au lieu de label?)
// gérer les cas: matières, autocomplétion si nom d'élève rentré, professeur
/**
 *
 * @author Louis, Kevin
 */
public class TraitementControlePresenceFrame extends javax.swing.JFrame {

    JFrame frame = new JFrame("Resultats");
    public JPanel PanneauTitre;
    public JLabel titre1;
    public JLabel titre2;
    public JPanel PanneauChoix;
    public JComboBox choixAction;
    public JComboBox listeNoms = new JComboBox();
    public JComboBox listeMatieres = new JComboBox();
    public JLabel textRequest;
    public JPanel PanneauFormulaire = new JPanel();
    CardLayout cl = new CardLayout();
    JPanel PanneauChamps = new JPanel();
    String[] list = {"VIDE", "ELEVE", "MATIERE", "ELEVEMATIERE", "PROFESSEUR"};
    public JPanel jPanelVide = new JPanel();
    public JPanel jPanelEleve = new JPanel();
    public JPanel jPanelMatiere = new JPanel();
    public JPanel jPanelEleveMatiere = new JPanel();
    public JPanel jPanelProfesseur = new JPanel();
    public JLabel labelMatiere = new JLabel("Matière : ");
    public JLabel labelNom = new JLabel("Nom : ");
    public JLabel labelPrenom = new JLabel("Prénom : ");
    public JTextField textMatiere = new JTextField("textMatiere");
    public JTextField textNom = new JTextField("textNom");
    public JTextField textPrenom = new JTextField("textPrenom");
    public JTextField resultats = new JTextField("resultats");
    public JPanel PanneauBouton = new JPanel();
    public JButton creationBouton = new JButton("Générer l'exportation !");

    /**
     * Initialisation des composants de la fenêtre 
     */
    public TraitementControlePresenceFrame() {
        initComponents();
        initPanels();
        this.setLocationRelativeTo(null);
        choixAction.addActionListener(new ItemAction());
        creationBouton.addActionListener(new BoutonListener());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanneauTitre = new javax.swing.JPanel();
        titre2 = new javax.swing.JLabel();
        titre1 = new javax.swing.JLabel();
        PanneauChoix = new javax.swing.JPanel();
        textRequest = new javax.swing.JLabel();
        choixAction = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Traitement des données - Contrôle de présence");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(500, 400));
        setResizable(false);
        getContentPane().setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 2));

        PanneauTitre.setMinimumSize(new java.awt.Dimension(500, 80));
        PanneauTitre.setOpaque(false);
        PanneauTitre.setPreferredSize(new java.awt.Dimension(500, 80));

        titre2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titre2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titre2.setText("Contrôle de présence");
        titre2.setMaximumSize(null);
        titre2.setMinimumSize(null);
        titre2.setPreferredSize(new java.awt.Dimension(500, 40));
        PanneauTitre.add(titre2);

        titre1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titre1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titre1.setText("Traitement des données");
        titre1.setMaximumSize(new java.awt.Dimension(200, 50));
        titre1.setMinimumSize(null);
        titre1.setName(""); // NOI18N
        titre1.setPreferredSize(new java.awt.Dimension(500, 25));
        PanneauTitre.add(titre1);

        getContentPane().add(PanneauTitre);

        PanneauChoix.setMaximumSize(null);
        PanneauChoix.setMinimumSize(new java.awt.Dimension(500, 90));
        PanneauChoix.setPreferredSize(new java.awt.Dimension(500, 90));
        PanneauChoix.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 10));

        textRequest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textRequest.setText("Quel objet est concerné par votre requête?");
        textRequest.setMaximumSize(null);
        textRequest.setMinimumSize(null);
        textRequest.setPreferredSize(new java.awt.Dimension(500, 30));
        PanneauChoix.add(textRequest);

        choixAction.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Un élève", "Une matière", "Un élève dans une matière", "Un professeur" }));
        choixAction.setMaximumSize(null);
        choixAction.setMinimumSize(null);
        choixAction.setPreferredSize(new java.awt.Dimension(200, 20));
        choixAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choixActionActionPerformed(evt);
            }
        });
        PanneauChoix.add(choixAction);

        getContentPane().add(PanneauChoix);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initPanels() {
        int width = 400;
        int hgapGridLayout = 20;
        int vgapGridLayout = 10;

        PanneauFormulaire.setPreferredSize(new java.awt.Dimension(width, 250));
        PanneauFormulaire.setLayout(new java.awt.GridLayout(2, 1, 20, 30));

        int heightPanneauChamp = 80;
        jPanelVide.setPreferredSize(new java.awt.Dimension(width, heightPanneauChamp));
        jPanelVide.setLayout(new java.awt.GridLayout(1, 1, hgapGridLayout, vgapGridLayout));

        jPanelEleve.setPreferredSize(new java.awt.Dimension(width, heightPanneauChamp));
        jPanelEleve.setLayout(new java.awt.GridLayout(2, 1, hgapGridLayout, vgapGridLayout));
        jPanelEleve.add(new JPanelChamp("Nom"));
        jPanelEleve.add(new JPanelChamp("Prenom"));

        jPanelMatiere.setPreferredSize(new java.awt.Dimension(width, heightPanneauChamp));
        jPanelMatiere.setLayout(new java.awt.GridLayout(1, 1, hgapGridLayout, vgapGridLayout));
        jPanelMatiere.add(new JPanelChamp("Matiere"));

        jPanelEleveMatiere.setPreferredSize(new java.awt.Dimension(width, heightPanneauChamp));
        jPanelEleveMatiere.setLayout(new java.awt.GridLayout(3, 1, hgapGridLayout, vgapGridLayout));
        jPanelEleveMatiere.add(new JPanelChamp("Nom"));
        jPanelEleveMatiere.add(new JPanelChamp("Prénom"));
        jPanelEleveMatiere.add(new JPanelChamp("Matiere"));

        jPanelProfesseur.setPreferredSize(new java.awt.Dimension(width, heightPanneauChamp));
        jPanelProfesseur.setLayout(new java.awt.GridLayout(2, 1, hgapGridLayout, vgapGridLayout));
        jPanelProfesseur.add(new JPanelChamp("Nom"));
        jPanelProfesseur.add(new JPanelChamp("Prénom"));

        PanneauChamps.setLayout(cl);
        PanneauChamps.add(jPanelVide, list[0]);
        PanneauChamps.add(jPanelEleve, list[1]);
        PanneauChamps.add(jPanelMatiere, list[2]);
        PanneauChamps.add(jPanelEleveMatiere, list[3]);
        PanneauChamps.add(jPanelProfesseur, list[4]);
        PanneauFormulaire.add(PanneauChamps);

        PanneauBouton.add(creationBouton);
        PanneauBouton.setPreferredSize(new java.awt.Dimension(width, 70));
        PanneauFormulaire.add(PanneauBouton);

        this.getContentPane().add(PanneauFormulaire);
        cl.show(PanneauChamps, list[0]);
        this.setVisible(true);

        textNom.getDocument().addDocumentListener(new SearchL());
        textPrenom.getDocument().addDocumentListener(new SearchL());
        textMatiere.getDocument().addDocumentListener(new SearchL());

    }

    private void choixActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choixActionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_choixActionActionPerformed

    
    /**
     * Les champs de la JTable sont initialisés selon l'item selectionné de la liste déroulante
     * @param args the command line arguments
     */
    class ItemAction implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            switch (choixAction.getSelectedIndex()) {
                case 1:
                    cl.show(PanneauChamps, list[1]);
                    break;
                case 2:
                    cl.show(PanneauChamps, list[2]);
                    break;
                case 3:
                    cl.show(PanneauChamps, list[3]);
                    break;
                case 4:
                    cl.last(PanneauChamps);
                    break;
                default:
                    break;
            }

        }
    }

    /**
     * Récupération des valeurs entrées par l'utilisateur lors de la validation du choix 
     * Elles sont traitées dans TraitementControlePresence.java puis analysées
     * 
     */
    class BoutonListener implements ActionListener {
        //Redéfinition de la méthode actionPerformed()

        @Override
        public void actionPerformed(ActionEvent arg0) {

            switch (choixAction.getSelectedIndex()) {
                case 1:
                    Requetes.creationFormulaireAbsenceEtudiant(
                            textNom.getText(),
                            textPrenom.getText());
                    break;
                case 2:
                    Requetes.creationFormulaireAbsenceMatiere(
                            textMatiere.getText());
                    break;
                case 3:
                    Requetes.creationFormulaireAbsenceEtudiantPourUneMatière(
                            textNom.getText(),
                            textPrenom.getText(),
                            textMatiere.getText());
                    break;
                case 4:
                    Requetes.creationFormulaireAbsenceEtudiant(
                            textNom.getText(),
                            textPrenom.getText());
                    break;
                default:
                    ;
            }
        }
    }

    class SearchL implements DocumentListener {

        @Override
        public void insertUpdate(DocumentEvent de) {
            textValueChanged();
        }

        @Override
        public void removeUpdate(DocumentEvent de) {
            textValueChanged();
        }

        @Override
        public void changedUpdate(DocumentEvent de) {
        }
    }

    public void textValueChanged() {

        switch (choixAction.getSelectedIndex()) { // eleve
            case 1:
                // si on est dans le cas d'un élève, à partir du nom, il faudrait pouvoir 
                // avoir automatiquement le prénom ou la liste                    
                listeNoms = Requetes.listeNoms(textNom);

                if (listeNoms.getItemCount() != 0) {
                    afficher(listeNoms);
                }
                // on obtient la liste des noms
                break;
            case 2: // matiere
                // pas de souci pour la matiere -> un seul champ      
                listeMatieres = Requetes.listeMatieres(textMatiere);
                if (listeMatieres.getItemCount() != 0) {
                    afficher(listeMatieres);
                }
                // on obtient la liste des matieres suivant ce qu'a rentre l'user
                break;
            case 3: // eleve matiere

                listeNoms = Requetes.listeNoms(textNom);
                break;
            case 4: // prof
                listeNoms = Requetes.listeNoms(textNom);
                if (listeNoms.getItemCount() != 0) {
                    afficher(listeNoms);
                }

                break;
            default:
                ;
                break;
        }
    }

    public void afficher(JComboBox combo) {
        frame.add(combo, BorderLayout.NORTH);
        frame.setVisible(true);
    }

    /**
     * Message d'avertissement si matière/élève non repertorié
     * @param message
     * @param titre
     */
    public static void avertissement(String message, String titre) {

        JOptionPane.showMessageDialog(null, message, titre, JOptionPane.WARNING_MESSAGE);

    }

    /**
     * Message d'information lors de la génération du document Excel
     * @param message
     * @param titre
     */
    public static void notification(String message, String titre) {

        JOptionPane.showMessageDialog(null, message, titre, JOptionPane.INFORMATION_MESSAGE);
    }
}
/*
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanneauChoix;
    private javax.swing.JPanel PanneauTitre;
    private javax.swing.JComboBox choixAction;
    private javax.swing.JLabel textRequest;
    private javax.swing.JLabel titre1;
    private javax.swing.JLabel titre2;
    // End of variables declaration//GEN-END:variables
}*/
